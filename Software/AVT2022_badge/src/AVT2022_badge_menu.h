/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include "tcMenuTfteSpi.h"
#include <graphics/MenuTouchScreenEncoder.h>
#include <RuntimeMenuItem.h>
#include <IoAbstraction.h>

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern TFT_eSPI gfx;
extern TfteSpiDrawable gfxDrawable;
extern GraphicsDeviceRenderer renderer;

// Any externals needed by IO expanders, EEPROMs etc


// Global Menu Item exports
extern ActionMenuItem menuAbout;
extern ActionMenuItem menuSensorsPlotSensorsPlotIMU;
extern ActionMenuItem menuSensorsPlotSensorsPlotHumidity;
extern ActionMenuItem menuSensorsPlotSensorsPlotTemperature;
extern BackMenuItem menuBackSensorsPlotSensors;
extern SubMenuItem menuSensorsPlotSensors;
extern FloatMenuItem menuSensorsBatteryVoltage;
extern FloatMenuItem menuSensorsHumidity;
extern FloatMenuItem menuSensorsTemperature;
extern BackMenuItem menuBackSensors;
extern SubMenuItem menuSensors;
extern ActionMenuItem menuToolsButtonTest;
extern ActionMenuItem menuToolsBLEScanner;
extern ActionMenuItem menuToolsWiFiScanner;
extern BackMenuItem menuBackTools;
extern SubMenuItem menuTools;
extern ActionMenuItem menuGamesSnek;
extern ActionMenuItem menuGamesGameOfLife;
extern ActionMenuItem menuGamesQuiz;
extern BackMenuItem menuBackGames;
extern SubMenuItem menuGames;
extern ActionMenuItem menuSetupResetPreferences;
extern ActionMenuItem menuSetupMQTTSave;
extern EnumMenuItem menuSetupMQTTStatus;
extern AnalogMenuItem menuSetupMQTTPostInterval;
extern AnalogMenuItem menuSetupMQTTPort;
extern TextMenuItem menuSetupMQTTBroker;
extern BooleanMenuItem menuSetupMQTTEnable;
extern BackMenuItem menuBackSetupMQTT;
extern SubMenuItem menuSetupMQTT;
extern ActionMenuItem menuSetupWiFiSave;
extern TextMenuItem menuSetupWiFiIPaddr;
extern TextMenuItem menuSetupWiFiUUID;
extern EnumMenuItem menuSetupWiFiStatus;
extern TextMenuItem menuSetupWiFiPassword;
extern TextMenuItem menuSetupWiFiSSID;
extern BooleanMenuItem menuSetupWiFiEnableWiFi;
extern BackMenuItem menuBackSetupWiFi;
extern SubMenuItem menuSetupWiFi;
extern ActionMenuItem menuSetupSave;
extern EnumMenuItem menuSetupBadgeMode;
extern EnumMenuItem menuSetupBacklight;
extern TextMenuItem menuSetupName;
extern BackMenuItem menuBackSetup;
extern SubMenuItem menuSetup;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuSetup; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION LaunchButtonTest(int id);
void CALLBACK_FUNCTION LaunchGameOfLife(int id);
void CALLBACK_FUNCTION LaunchSnek(int id);
void CALLBACK_FUNCTION LaunchWiFiScanner(int id);
void CALLBACK_FUNCTION PlotHumidity(int id);
void CALLBACK_FUNCTION PlotIMU(int id);
void CALLBACK_FUNCTION PlotTemperature(int id);
void CALLBACK_FUNCTION ResetPreferences(int id);
void CALLBACK_FUNCTION SetupSave(int id);
void CALLBACK_FUNCTION about(int id);
void CALLBACK_FUNCTION launchBLEScan(int id);
void CALLBACK_FUNCTION launchQuiz(int id);
void CALLBACK_FUNCTION saveMQTT(int id);
void CALLBACK_FUNCTION saveWifi(int id);
void CALLBACK_FUNCTION setBacklight(int id);
void CALLBACK_FUNCTION setBadgeMode(int id);
void CALLBACK_FUNCTION setMQTTBroker(int id);
void CALLBACK_FUNCTION setMQTTEnable(int id);
void CALLBACK_FUNCTION setMQTTPort(int id);
void CALLBACK_FUNCTION setMQTTPostInterval(int id);
void CALLBACK_FUNCTION setSSID(int id);
void CALLBACK_FUNCTION setWiFiEnable(int id);
void CALLBACK_FUNCTION setWiFiPassword(int id);

#endif // MENU_GENERATED_CODE_H
