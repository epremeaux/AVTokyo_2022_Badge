/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include <LiquidCrystalIO.h>
#include "EthernetTransport.h"
#include <RemoteConnector.h>
#include "SerialTransport.h"
#include <RemoteMenuItem.h>
#include <RuntimeMenuItem.h>
#include <EditableLargeNumberMenuItem.h>
#include <IoAbstraction.h>
#include <EepromAbstractionWire.h>
#include <RemoteAuthentication.h>
#include "tcMenuLiquidCrystal.h"

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern TcMenuRemoteServer remoteServer;
extern LiquidCrystal lcd;
extern LiquidCrystalRenderer renderer;
extern EthernetServer server;
extern EthernetInitialisation ethernetInitialisation;

// Any externals needed by IO expanders, EEPROMs etc
extern IoAbstractionRef io23017;

// Global Menu Item exports
extern EepromAuthenticationInfoMenuItem menuConnectivityAuthenticator;
extern RemoteMenuItem menuConnectivityIoTMonitor;
extern IpAddressMenuItem menuConnectivityIPAddress;
extern TextMenuItem menuConnectivityChangePin;
extern BackMenuItem menuBackConnectivity;
extern SubMenuItem menuConnectivity;
extern DateFormattedMenuItem menuSettingsDate;
extern TimeFormattedMenuItem menuSettingsTime;
extern EditableLargeNumberMenuItem menuSettingsNum6x4;
extern EditableLargeNumberMenuItem menuSettingsPositiveInts;
extern ActionMenuItem menuSettingsSaveSettings;
extern AnalogMenuItem menuSettingsPower;
extern BooleanMenuItem menuSettingsEnabled;
extern BackMenuItem menuBackSettings;
extern SubMenuItem menuSettings;
extern ActionMenuItem menuQuestionDialog;
extern ActionMenuItem menuInfoDialog;
extern TextMenuItem menuText;
extern EnumMenuItem menuFood;
extern ActionMenuItem menuTakeDisplay;
extern TimeFormattedMenuItem menuTime;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuTime; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION onChangePin(int id);
void CALLBACK_FUNCTION onFoodChoice(int id);
void CALLBACK_FUNCTION onInfoDlg(int id);
void CALLBACK_FUNCTION onQuestionDlg(int id);
void CALLBACK_FUNCTION onSaveSettings(int id);
void CALLBACK_FUNCTION onTakeOverDisplay(int id);

#endif // MENU_GENERATED_CODE_H
